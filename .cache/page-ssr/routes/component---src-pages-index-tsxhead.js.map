{"version":3,"file":"component---src-pages-index-tsxhead.js","mappings":";;;;;;;;;;;;;;;;;AAUO,MAAMA,eAAe,GAAG,MAAM;EACpC,MAAMC,IAAI,GAAG,wEAQV;EAEF,OAAOA,IAAI,CAACC,IAAI,CAACC,YAAY;AAC/B,CAAC;;;;;;;;;;;;;;;;ACrBmE;AAAA;AAAA;AAAA;AAUpE,MAAMC,eAAe,GAAG,6DAA6D;AAErF,MAAMC,GAAgD,GAAG,CAAC;EACvDC,KAAK;EACLC,WAAW;EACXC,IAAI;EACJC,QAAQ;EACRC;AACH,CAAC,KAAK;EACJ,MAAM;IAAEH,WAAW,EAAEI;EAAmB,CAAC,GAAGX,8EAAe,EAAE;EAC7D,IAAIY,KAAK,GAAG,CACV;IACEC,IAAI,EAAG,aAAY;IACnBC,OAAO,EAAEP,WAAW,IAAII;EAC1B,CAAC,EACD;IACEI,QAAQ,EAAG,UAAS;IACpBD,OAAO,EAAER;EACX,CAAC,EACD;IACES,QAAQ,EAAG,gBAAe;IAC1BD,OAAO,EAAEP,WAAW,IAAII;EAC1B,CAAC,EACD;IACEI,QAAQ,EAAG,SAAQ;IACnBD,OAAO,EAAG;EACZ,CAAC,EACD;IACED,IAAI,EAAG,UAAS;IAChBC,OAAO,EAAEL,QAAQ,IAAIL;EACvB,CAAC,CACF;EAED,IAAII,IAAI,EAAE;IACRI,KAAK,GAAGA,KAAK,CAACI,MAAM,CAACR,IAAI,CAAC;EAC5B;EAEA,OACES,0DAAAA,CAAAA,0DAAAA;IAAAP,WACEQ,yDAAAA;MAAAR,UAASJ;IAAK,EAAU,EAEtBM,KAAK,CAACO,GAAG,CAACC,IAAI,IACZA,IAAI,CAACP,IAAI,GACLK,yDAAAA;MAAwBL,IAAI,EAAGO,IAAI,CAACP,IAAM;MAACC,OAAO,EAAGM,IAAI,CAACN;IAAS,GAAvDM,IAAI,CAACP,IAAI,CAAiD,GACtEK,yDAAAA;MAA4BH,QAAQ,EAAGK,IAAI,CAACL,QAAU;MAACD,OAAO,EAAGM,IAAI,CAACN;IAAS,GAAnEM,IAAI,CAACL,QAAQ,CAC9B,CAAC,EAEFL,QAAQ,EACVQ,yDAAAA;MAAML,IAAI,EAAC,aAAa;MAACC,OAAO,EAAC;IAAmC,EAAG;EAAA,EACtE;AAEP,CAAC;AAED,iEAAeT,GAAG;;;;;;;;;;;;;;;;;;AChE2B;AAEL;AAAA;AAExC,MAAMkB,SAAS,GAAG,MAChBL,yDAAAA,CAACG,+CAAS;EAACG,EAAE,EAAE;IAAEC,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAAE,CAAE;EAAAhB,UAC1DQ,yDAAAA,CAACI,6CAAO;IAACE,EAAE,EAAE;MAAEG,SAAS,EAAE;IAAS,CAAE;IAAAjB;EAAA;AAAwB,EAEhE;AAED,iEAAea,SAAS,EAAC;AAClB,MAAMK,IAAI,GAAG,MAAMV,yDAAAA,CAACb,4DAAG;EAACC,KAAK,EAAC;AAAO,EAAG","sources":["webpack://zhaohuanyu-blog/./src/common/hooks/useSiteMetaData.tsx","webpack://zhaohuanyu-blog/./src/components/core/SEO.tsx","webpack://zhaohuanyu-blog/./src/pages/index.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\ntype ReturnValue = {\n  site: {\n    siteMetadata: {\n      description: string\n    }\n  }\n}\n\nexport const useSiteMetadata = () => {\n\tconst data = useStaticQuery<ReturnValue>(graphql`\n      query {\n          site {\n              siteMetadata {\n                  description\n              }\n          }\n      }\n  `)\n\n  return data.site.siteMetadata\n}\n","import React from \"react\"\nimport { useSiteMetadata } from \"../../common/hooks/useSiteMetaData\"\n\ntype SEOProps = {\n  lang?: string\n  title?: string\n  description?: string\n  meta?: any\n  keywords?: string\n}\n\nconst defaultKeywords = '博客, 前端, gatsby, blog, frontend, framework, react, vue, node';\n\nconst SEO: React.FC<React.PropsWithChildren<SEOProps>> = ({\n   title,\n   description,\n   meta,\n   keywords,\n   children\n}) => {\n  const { description: defaultDescription } = useSiteMetadata();\n  let metas = [\n    {\n      name: `description`,\n      content: description || defaultDescription,\n    },\n    {\n      property: `og:title`,\n      content: title,\n    },\n    {\n      property: `og:description`,\n      content: description || defaultDescription,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `keywords`,\n      content: keywords || defaultKeywords,\n    }\n  ];\n\n  if (meta) {\n    metas = metas.concat(meta);\n  }\n\n  return (\n    <>\n      <title>{ title }</title>\n      {\n        metas.map(item => (\n          item.name\n            ? <meta key={ item.name } name={ item.name } content={ item.content } />\n            : <meta key={ item.property } property={ item.property } content={ item.content } />\n        ))\n      }\n      { children }\n      <meta name=\"theme-color\" content=\"var(--theme-ui-colors-background)\" />\n    </>\n  )\n}\n\nexport default SEO;\n","import { Container, Heading } from \"theme-ui\"\n\nimport SEO from \"../components/core/SEO\"\n\nconst IndexPage = () => (\n  <Container sx={{ mt: 6, maxWidth: ['100%', 600, 700, 800] }}>\n    <Heading sx={{ textAlign: 'center' }}>This is Index</Heading>\n  </Container>\n)\n\nexport default IndexPage;\nexport const Head = () => <SEO title='Index' />;\n"],"names":["useSiteMetadata","data","site","siteMetadata","defaultKeywords","SEO","title","description","meta","keywords","children","defaultDescription","metas","name","content","property","concat","_jsxs","_jsx","map","item","Container","Heading","IndexPage","sx","mt","maxWidth","textAlign","Head"],"sourceRoot":""}